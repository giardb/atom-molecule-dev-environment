"use babel";
// @flow

import type {
  ConfigSchemaPart,
  PlanConfig,
} from "../../PlanConfigurationFeature/Types/types.js.flow";
import type {
  Controller,
  Strategy,
} from "../../TaskExecutionFeature/Types/types.js.flow";
import type {
  DiagnosticMode,
  PluginDiagnostic,
} from "../../DiagnosticsFeature/Types/types.js.flow";
import type { PackageTester } from "../../../ProjectSystemEpic/PackageFeature/Types/types.js.flow";

export type ProvidedDevTool = {
  infos: {
    id?: string,
    name: string,
    iconUri: string,
    dominantColor?: string,
    defaultDiagnosticsMode?: DiagnosticMode,
  },
  configSchema: ConfigSchemaPart,
  getStrategyForPlan(
    plan: PlanConfig,
  ): {
    strategy: Strategy,
    controller: Controller,
  },
  isPackage?: PackageTester,
};

export type TaskAPI = {
  addDiagnostics: (diagnostics: Array<PluginDiagnostic>) => void,
  cache: {
    push: (data: any, step: ?boolean) => void,
    get: (config: ?{ step: ?number, excludeNullStep: ?boolean }) => Array<any>,
  },
  nextStep: () => void,
};
